apiVersion: kagenti.operator.dev/v1alpha1
kind: Component
metadata:
  name: research-agent
spec:
  description: "A research agent for information gathering"

  agent:
  
    # Optional build specification for building from source
    build:
#      sourceRepository: "github.com/kagenti/agent-examples.git"
#      sourceRevision: "main"
#      sourceSubfolder: "acp/ollama-deep-researcher"
#      repoUser: "cwiklik"
#      sourceCredentials:
#        name: "github-token-secret"

      pipeline:
        steps:
          - name: github-clone
            configMap: github-clone-step
            parameters:
              - name: github-token-secret
                value: "github-credentials"  
              - name: repo-url
                value: "github.com/kagenti/agent-examples.git"
              - name: revision
                value: "main"
       
          - name: folder-verification
            configMap: check-subfolder-step
            parameters:
              - name: subfolder-path
                value: "acp/ollama-deep-researcher"
              - name: fail-on-missing
                value: "true"      

          - name: kaniko-build
            configMap:  kaniko-docker-build-step
            parameters:
              - name: IMAGE
                value: "registry.cr-system.svc.cluster.local:5000/beai-research-agent:latest"
              - name: subfolder-path
                value: "acp/ollama-deep-researcher"
              - name: registry-secret
                value: "github-token-secret"
              - name: SKIP_TLS_VERIFY
                value: "false"
              - name: DOCKERFILE
                value: "Dockerfile"    

      buildOutput:
        image: "beai-research-agent"
        imageTag: "latest"
        imageRegistry: "registry.cr-system.svc.cluster.local:5000"
      cleanupAfterBuild: true
 
    # General component configuration
 
  deployer:
    name: "my-agent-deployment"
    namespace: "default"
    deployAfterBuild: false
    kubernetes:
      imageSpec:
        image: "beai-research-agent"
        imageTag: "latest"
        imageRegistry: "registry.cr-system.svc.cluster.local:5000"
        imagePullPolicy: "IfNotPresent"
      containerPorts:
        - name: "http"
          containerPort: 8090
          protocol: "TCP"
      servicePorts:
        - name: "http"
          port: 8008
          targetPort: 8090
          protocol: "TCP"   
      resources:
        limits:
          cpu: "1"
          memory: "2Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      serviceType: "ClusterIP"

    env:
      - name: LLM_MODEL
        value: "llama3.2:70b"
      - name: LLM_URL
        value: "http://llm-service:11434"

 
